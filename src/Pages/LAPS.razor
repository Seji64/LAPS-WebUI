@page "/laps"
@inject ISessionManagerService sessionManager
@inject NavigationManager NavigationManager
@inject ILdapService LDAPService
@inject ISnackbar Snackbar
@inject IDialogService Dialog

<MudContainer MaxWidth="MaxWidth.Large" Class="mt-5">

    @if (!Authenticated)
    {
        <MudAlert Elevation="3" Severity="Severity.Error" Variant="Variant.Outlined">Access denied!</MudAlert>
    }
    else
    {
        <MudAutocomplete Label="Search by Computername" HelperTextOnFocus="true" HelperText="Minimum query length is 4. Wildcard (*) is supported" Variant="Variant.Outlined" ShowProgressIndicator="true" AutoFocus="true" Immediate="true" ResetValueOnEmptyText="true" @ref="AutoCompleteSearchBox"
                         MaxItems=null ValueChanged="@(async (ADComputer a) => OnSelectedItemChangedAsync(a).AndForget())" MinCharacters="4" MaxLength="15" SearchFunc="@SearchAsync" ToStringFunc="@(x => (x is null ? string.Empty : x.Name))"  
            AdornmentIcon="@Icons.Material.Outlined.Search" AdornmentColor="Color.Default" Adornment="Adornment.Start" SelectOnClick="true" SelectValueOnTab=true Clearable=true aria-label="Search Computer" >
                <ItemTemplate Context="e">
                    <MudText>
                        <MudIcon Icon="@Icons.Material.Filled.Computer" Class="mb-n1 mr-3" aria-label=@($"{e.Name}")/>@($"{e.Name}")
                    </MudText>
                </ItemTemplate>
                <ItemSelectedTemplate Context="e">
                    <MudText>
                        <MudIcon Icon="@Icons.Material.Filled.Computer" Class="mb-n1 mr-3" aria-label=@($"{e.Name}")/>@($"{e.Name}")
                    </MudText>
                </ItemSelectedTemplate>
                <MoreItemsTemplate>
                    <AutoCompleteMoreItemsFound/>
                </MoreItemsTemplate>
                <NoItemsTemplate>
                    <AutoCompleteNoItemsFound />
                </NoItemsTemplate>
            </MudAutocomplete>

        <MudGrid Class="mt-8" Justify="Justify.SpaceEvenly">

            @foreach(var computer in SelectedComputers)
            {
                <MudItem xs="10" lg="6">
                    <MudCard>
                        <MudCardHeader>
                            <CardHeaderContent>
                                <MudText Typo="Typo.h5">@computer.Name</MudText>
                            </CardHeaderContent>
                            <CardHeaderActions>
                                <MudStack Row="true" Spacing="0">
                                    <MudTooltip Text="Clear LAPS Password">
                                        <MudIconButton Icon="@Icons.Material.Filled.LockReset" Color="Color.Primary" OnClick="@(async e => await ClearLapsPassword(computer))" aria-label="clear laps password" Disabled=@(computer.Loading) />
                                    </MudTooltip>
                                    <MudTooltip Text="Refresh">
                                        <MudIconButton Icon="@Icons.Material.Filled.Refresh" Color="Color.Primary" OnClick="@(async e => await RefreshComputerDetailsAsync(computer))" aria-label="refresh" Disabled=@(computer.Loading) />
                                    </MudTooltip>
                                    <MudIconButton Icon="@Icons.Material.Filled.Close" Color="Color.Default" OnClick="@(() => RemoveComputerCard(computer.Name))" aria-label="close" Disabled=@(computer.Loading) />
                                </MudStack>
                            </CardHeaderActions>       
                        </MudCardHeader>
                        <MudCardContent>
                            @if(!computer.Loading)
                            {
                                @if(!computer.FailedToRetrieveLAPSDetails)
                                {
                                    <MudTabs Position="Position.Top" Rounded="true" Border="false" ApplyEffectsToContainer="true" PanelClass="pa-4" @key="computer.Name" @ref="MudTabsDict[computer.Name]">
                                        <MudTabPanel Icon="@Icons.Material.Outlined.Filter1" ID="@("v1")" Text="v1" Disabled=@(!computer.LAPSInformations!.Any(x => x.Version == Enums.LAPSVersion.v1 && x.IsCurrent))>
                                            <LapsInformationDetail LapsInfo="computer.LAPSInformations!.SingleOrDefault(x => x.Version == Enums.LAPSVersion.v1)" />
                                        </MudTabPanel>
                                        <MudTabPanel Icon="@Icons.Material.Outlined.Filter2" ID="@("v2")" Text="v2" Disabled=@(!computer.LAPSInformations!.Any(x => x.Version == Enums.LAPSVersion.v2 && x.IsCurrent))>
                                            <LapsInformationDetail LapsInfo="computer.LAPSInformations!.SingleOrDefault(x => x.Version == Enums.LAPSVersion.v2 && x.IsCurrent)" />
                                        </MudTabPanel>
                                        <MudTabPanel Icon="@Icons.Material.Outlined.History" ID="@("history")" Text="History" Disabled=@(!computer.LAPSInformations!.Any(x => x.Version == Enums.LAPSVersion.v2 && !x.IsCurrent))>
                                            <MudSimpleTable Style="overflow-x: auto;" Dense="true" Hover="true" Striped="true">
                                                <thead>
                                                    <tr>
                                                        <th>Account</th>
                                                        <th>Password</th>
                                                        <th>Date set</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @foreach (var entry in computer.LAPSInformations!.Where(x => x.IsCurrent == false && x.Version == Enums.LAPSVersion.v2))
                                                    {
                                                        <tr>
                                                            <td>
                                                                @entry.Account
                                                            </td>
                                                            <td>
                                                                @entry.Password
                                                            </td>
                                                            <td>
                                                                @entry.PasswordSetDate
                                                            </td>
                                                        </tr>
                                                    }
                                                </tbody>
                                            </MudSimpleTable>
                                        </MudTabPanel>
                                    </MudTabs>
                                }
                                else
                                {
                                    <MudAlert Icon="@Icons.Material.Outlined.Warning" ShowCloseIcon="false" Variant="Variant.Outlined" Severity="Severity.Warning">
                                        <MudText Typo="Typo.inherit">No permission to retrieve LAPS Password or no LAPS Password set!</MudText>
                                    </MudAlert>
                                }
                            }
                            else
                            {
                                <div class="d-flex justify-center">
                                    <MudProgressCircular Class="" Indeterminate="true" Size="Size.Large" Disabled=@(computer.Loading) />
                                </div>
                            }
                        </MudCardContent>
                    </MudCard>
                </MudItem>
            }

        </MudGrid>
    }
 </MudContainer>
